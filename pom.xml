<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.programmingcentre.utils</groupId>
  <artifactId>mediaman</artifactId>
  <version>1.0</version>

  <build>
    <defaultGoal>package</defaultGoal>
    <directory>${project.basedir}/build</directory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>

        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
          </args>

          <launchers>
            <launcher>
              <id>development</id>
              <mainClass>com.programmingcentre.mediaman.Main</mainClass>
              <jvmArgs>
                <jvmArg>-Dmediaman.environment=development</jvmArg>
              </jvmArgs>
            </launcher>
            <launcher>
              <id>production</id>
              <mainClass>com.programmingcentre.mediaman.Main</mainClass>
              <jvmArgs>
                <jvmArg>-Dmediaman.environment=production</jvmArg>
              </jvmArgs>
            </launcher>
          </launchers>
        </configuration>
      </plugin>

      <!-- Maven Shade: creating fat jars with more control than maven-assembly-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.programmingcentre.mediaman.Main</mainClass>
                </transformer>
                <!-- Concatenate reference.conf files together rather than replacing them -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>
              <filters>
                <!-- Filter signatures belonging to dependent jars, as we're repackaging things -->
                <filter>
                  <artifact>*.*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <createDependencyReducedPom>false</createDependencyReducedPom>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- Test plugin configuration: disable surefire and use scalatest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12.4</version>

        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>

        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>tests.txt</filereports>
          <argLine>-Dmediaman.environment=testing</argLine>
        </configuration>

        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.10.3</version>
    </dependency>

    <!-- Spray: a RESTful framework based on Akka -->
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-can</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-routing</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-json_2.10</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-httpx_2.10</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_2.10</artifactId>
      <version>2.3.0</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.2</version>
    </dependency>

    <!-- Required for conditional statements in logback configuration -->
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>2.6.1</version>
    </dependency>

    <!-- Config -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.2.1</version>
    </dependency>

    <!-- TEST DEPENDENCIES -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.10</artifactId>
      <version>2.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-testkit</artifactId>
      <version>1.3.1</version>
    </dependency>
  </dependencies>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
